#!/bin/bash

#### Get OS type
os_type="Linux"
if [ "$(uname)" == "Darwin" ]; then
    os_type="Darwin"
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    os_type="Linux"
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
    echo "Windows not supported. Exiting..."
    exit 2
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
    echo "Windows not supported. Exiting..."
    exit 2
fi

#### Make a _build dir to hold boost & p2p 
working_dir="$(pwd)/_build"
if [ ! -f $working_dir ]; then
    mkdir $working_dir
fi
cd $working_dir

#### Set up Boost
# Get required libs
if [ $os_type == "Darwin" ]; then
    sudo apt-get update
    sudo apt-get install -y build-essential g++ build-essential
fi

# Get boost source
boost_download_url=https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz
boost_download_dir=boost_1_69_0
boost_download_file=${boost_download_dir}.tar.gz
if [ ! -f $boost_download_file ]; then
    echo "boost tar file does not exist, downloading it"
    curl -L $boost_download_url -o $boost_download_file
    tar xzf $boost_download_file
else
    echo "boost tar file already exists, skipping download"
fi

# Start building boost
cd $boost_download_dir
if [ $os_type == "Linux" ]; then
    cpu_count=`cat /proc/cpuinfo | grep "cpu cores" | uniq | awk '{print $NF}'`
else
    cpu_count=`sysctl -n hw.ncpu`
fi

./bootstrap.sh
# Build only what we need
with="--with-type_erasure --with-iostreams"
sudo ./b2 $with -j $cpu_count install > /dev/null 2>&1

if [ $os_type == "Linux" ]; then
    sudo ldconfig
fi

# Set up p2p
cd $working_dir
cmake ..

